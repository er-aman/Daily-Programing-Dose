Given a List of words, return the words that can be typed using letters of alphabet on only one row's of American keyboard like the image below.
Input: ["Hello", "Alaska", "Dad", "Peace"]
Output: ["Alaska", "Dad"]


****************************************************SOLUTION**************************************************************************
working but slow solution:-
class Solution:
    def findWords(self, words: List[str]) -> List[str]:
        s1 = set(['q','w','e','r','t','y','u','i','o','p'])
        s2 = set(['a','s','d','f','g','h','j','k','l'])
        s3 = set(['z','x','c','v','b','n','m'])
        res = []
        for word in words:
            x = set(word.lower())
            if (x&s1) ==x or (x&s2) ==x or (x&s3) ==x:
                res.append(word)
        return res
        
 

Faster Solution

class Solution:
    def findWords(self, words: List[str]) -> List[str]:
        s1 = set("qwertyuiopQWERTYUIOP")
        s2 = set("asdfghjklASDFGHJKL")
        s3 = set("zxcvbnmZXCVBNM")
        return filter(lambda x : set(x).issubset(s1) or set(x).issubset(s2) or set(x).issubset(s3), words)
