Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.

 


Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].

 


The largest rectangle is shown in the shaded area, which has area = 10 unit.

 

Example:

Input: [2,1,5,6,2,3]
Output: 10


****************************************************SOLUTION*******************************************************************

Time Complexity, Space Complexity: O(n)

class Solution:
    def largestRectangleArea(self, heights: List[int]) -> int:
        stack=[-1]
        max_area = 0 
        for i in range(len(heights)):
            cur_height = heights[i]
            while stack[-1]!= -1 and cur_height <= heights[stack[-1]]:
                height = heights[stack.pop()]
                width = i - stack[-1] -1
                area = height * width
                max_area = max(max_area, area)
            stack.append(i)
        
        while stack[-1] != -1:
            height = heights[stack.pop()]
            width = len(heights)-stack[-1]-1
            area = height * width
            max_area = max(max_area, area)
        
        return max_area
