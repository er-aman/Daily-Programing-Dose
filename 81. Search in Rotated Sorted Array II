Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).

You are given a target value to search. If found in the array return true, otherwise return false.

Example 1:

Input: nums = [2,5,6,0,0,1,2], target = 0
Output: true
Example 2:

Input: nums = [2,5,6,0,0,1,2], target = 3
Output: false


*************************************************SOLUTION*********************************************************************

Time : O(logn)
Space O(1)

class Solution:
    def search(self, nums: List[int], target: int) -> bool:
        l,r=0,len(nums)-1
        while l<=r:
            mid = (l+r)//2
            if nums[mid]==target:
                return True
            elif nums[l]==nums[mid]:
                l+=1
            elif (nums[mid]> nums[l] and nums[l]<=target<nums[mid]) or (nums[mid]<nums[l] and not (nums[mid]<target<=nums[r])):
                r= mid-1
            else:
                l=mid+1
        return False
