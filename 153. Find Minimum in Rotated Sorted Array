Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).

Find the minimum element.

You may assume no duplicate exists in the array.

Example 1:

Input: [3,4,5,1,2] 
Output: 1
Example 2:

Input: [4,5,6,7,0,1,2]
Output: 0


*************************************************SOLUTION********************************************

Time : O(logn)
Space O(1)

class Solution:
    def findMin(self, nums: List[int]) -> int:
        l,r = 0,len(nums)-1
        while l<r and nums[l]>=nums[r]:
            mid =(l+r)//2
            if nums[mid]<nums[l]:
                r=mid
            else:
                l=mid+1
        return nums[l]
        
        
 
