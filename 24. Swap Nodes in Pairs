Given a linked list, swap every two adjacent nodes and return its head.

You may not modify the values in the list's nodes, only nodes itself may be changed.

 

Example:

Given 1->2->3->4, you should return the list as 2->1->4->3.

*****************************************************SOLUTION*******************************************************************
Time Complexity is O(n)
Space Complexity is O(1)

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def swapPairs(self, head: ListNode) -> ListNode:
        d= ListNode(-1)
        d.next = head 
        r=d
        while head and head.next:
            p= head 
            q= head.next 
            
            r.next =q
            p.next = q.next 
            q.next = p
            
            r=p
            head =p.next
        return d.next
